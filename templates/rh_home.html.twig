{% extends 'base.html.twig' %}
{% block title %}RH Dashboard{% endblock %}
{% block stylesheets %}
<style>
    body { 
        background: linear-gradient(135deg, #a8ff78 0%, #78ffd6 100%);
        min-height: 100vh;
        font-family: 'Segoe UI', 'Roboto', Arial, sans-serif;
        color: #222;
    }
    .container { max-width: 900px; margin: 0 auto; padding: 32px 0; }
    .main-content { display: flex; flex-direction: column; align-items: center; }
    .opportunities-section {
        background: #fff;
        border-radius: 24px;
        box-shadow: 0 8px 32px rgba(0, 180, 255, 0.10);
        padding: 40px 32px;
        width: 100%;
        margin-bottom: 32px;
        border: 3px solid;
        border-image: linear-gradient(90deg, #00b4ff 0%, #ffe066 100%) 1;
    }
    .section-header { display: flex; justify-content: space-between; align-items: center; margin-bottom: 25px; padding-bottom: 15px; border-bottom: 2px solid #f0f0f0; }
    .section-header h2 { font-size: 2rem; color: #00b4ff; font-weight: 800; letter-spacing: 1px; margin: 0; }
    .btn-primary { background: linear-gradient(90deg, #00b4ff 0%, #ffe066 100%); color: #222; border: none; padding: 12px 24px; border-radius: 25px; cursor: pointer; font-size: 1.1rem; font-weight: 700; transition: all 0.3s ease; }
    .btn-primary:hover { background: linear-gradient(90deg, #ffe066 0%, #00b4ff 100%); transform: translateY(-2px); }
    .opportunities-list { display: grid; grid-template-columns: repeat(auto-fill, minmax(350px, 1fr)); gap: 24px; margin-top: 32px; }
    .opportunity-card {
        background: #fff;
        border-radius: 20px;
        padding: 24px;
        box-shadow: 0 4px 20px rgba(0, 180, 255, 0.08);
        border: 2px solid #f0f8ff;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }
    .opportunity-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: linear-gradient(90deg, #00b4ff 0%, #ffe066 100%);
    }
    .opportunity-card:hover { transform: translateY(-4px); box-shadow: 0 8px 32px rgba(0, 180, 255, 0.15); }
    .opportunity-header { display: flex; justify-content: space-between; align-items: flex-start; margin-bottom: 16px; }
    .opportunity-title { font-size: 1.3rem; font-weight: 800; color: #00b4ff; margin-bottom: 4px; }
    .opportunity-company { font-size: 1rem; color: #666; font-weight: 600; }
    .opportunity-details { display: grid; grid-template-columns: 1fr 1fr; gap: 12px; margin-bottom: 16px; }
    .detail-item { display: flex; flex-direction: column; }
    .detail-label { font-size: 0.9rem; color: #888; font-weight: 600; margin-bottom: 4px; }
    .detail-value { font-size: 1rem; color: #222; font-weight: 700; }
    .value-amount { color: #00b4ff; }
    .opportunity-description { color: #666; font-size: 0.95rem; line-height: 1.5; margin-bottom: 16px; }
    .opportunity-actions { display: flex; gap: 12px; justify-content: flex-end; }
    .btn-edit { background: linear-gradient(90deg, #ffe066 0%, #00b4ff 100%); color: #222; border: none; padding: 6px 18px; border-radius: 20px; cursor: pointer !important; font-size: 1rem; font-weight: 700; transition: all 0.3s ease; pointer-events: auto !important; }
    .btn-edit:hover { background: linear-gradient(90deg, #fffbe0 0%, #00b4ff 100%); color: #0077b6; }
    .btn-delete { background: #ff4757; color: white; border: none; padding: 6px 18px; border-radius: 20px; cursor: pointer !important; font-size: 1rem; font-weight: 700; transition: all 0.3s ease; pointer-events: auto !important; }
    .btn-delete:hover { background: #ff3742; transform: translateY(-1px); }
    .modal { display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.7); z-index: 1000; backdrop-filter: blur(5px); }
    .modal-content { position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background: #fff; border-radius: 24px; padding: 40px; width: 90%; max-width: 500px; max-height: 80vh; overflow-y: auto; box-shadow: 0 8px 32px rgba(0, 180, 255, 0.10); border: 3px solid; border-image: linear-gradient(90deg, #00b4ff 0%, #ffe066 100%) 1; }
    .form-group { margin-bottom: 20px; }
    .form-group label { display: block; margin-bottom: 8px; font-weight: 700; color: #00b4ff; }
    .form-group input, .form-group select, .form-group textarea { width: 100%; padding: 14px 15px; border: 2px solid #e0e0e0; border-radius: 12px; font-size: 1.08rem; transition: border-color 0.3s ease; background: #f8fbff; }
    .form-group input:focus, .form-group select:focus, .form-group textarea:focus { outline: none; border-color: #00b4ff; background: #fffbe0; }
    .form-actions { display: flex; gap: 15px; justify-content: flex-end; margin-top: 30px; }
    .btn-secondary { background: #f5f5f5; color: #666; border: none; padding: 13px 36px; border-radius: 30px; cursor: pointer; font-weight: 700; font-size: 1.1rem; transition: all 0.3s ease; }
    .btn-secondary:hover { background: #e0e0e0; }
    .btn-primary[type="submit"] { cursor: pointer !important; pointer-events: auto !important; }
    .form-actions button { cursor: pointer !important; pointer-events: auto !important; }
    .btn-edit { cursor: pointer !important; pointer-events: auto !important; }
    .btn-primary { cursor: pointer !important; pointer-events: auto !important; }
    .btn-secondary { cursor: pointer !important; pointer-events: auto !important; }
</style>
{% endblock %}
{% block body %}
{% include 'navbar.html.twig' %}
<div class="container">
    <div class="main-content">
        <section class="opportunities-section">
            <div class="section-header">
                <h2>Existing Opportunities</h2>
                <a href="{{ path('rh_add_opportunity_page') }}" class="btn-primary" style="text-decoration: none; display: inline-block;">
                    âž• Add Opportunity
                </a>
            </div>
            <div id="opportunitiesList">
                {% for opp in opportunities %}
                    <div class="opportunity-card" data-opportunity-id="{{ opp.id }}">
                        <div class="opportunity-header">
                            <div>
                                <div class="opportunity-title">{{ opp.name }}</div>
                                <div class="opportunity-company">{{ opp.company }}</div>
                            </div>
                        </div>
                        <div class="opportunity-details">
                            <div class="detail-item">
                                <span class="detail-label">ðŸ‘¤ Contact:</span>
                                <span class="detail-value">{{ opp.contact }}</span>
                            </div>
                                                         <div class="detail-item">
                                 <span class="detail-label">ðŸ’° Provisional bail:</span>
                                 <span class="detail-value value-amount">{{ opp.value }} DT</span>
                             </div>
                            

                            <div class="detail-item">
                                <span class="detail-label">ðŸ“… Deadline:</span>
                                <span class="detail-value">{{ opp.closeDate ? opp.closeDate|date('Y-m-d') : '' }}</span>
                            </div>
                        </div>
                        {% if opp.description %}
                            <p>{{ opp.description }}</p>
                        {% endif %}
                                                 <div class="opportunity-actions">
                            <button type="button" class="btn-delete" onclick="deleteOpportunity({{ opp.id }})" title="Delete this opportunity">Delete</button>
                            <a href="{{ path('rh_edit_opportunity_page', {'id': opp.id}) }}" class="btn-edit" title="Edit this opportunity" style="text-decoration: none; display: inline-block;">Edit</a>
                        </div>
                         {% if opp.notifiedToAdmin %}
                             <div style="position: absolute; top: 10px; right: 10px; background: linear-gradient(90deg, #28a745, #20c997); color: white; padding: 4px 8px; border-radius: 12px; font-size: 0.8rem; font-weight: 600;">
                                 âœ… Notified
                             </div>
                         {% endif %}
                    </div>
                {% else %}
                    <div style="text-align: center; color: #666; font-style: italic; padding: 40px;">No opportunities found.</div>
                {% endfor %}
            </div>
        </section>
        
        <!-- Button to inform administrator -->
        <form method="post" action="{{ path('inform_admin') }}" style="display: inline;">
            <button type="submit" class="btn-primary" style="margin-top: 20px;">
                ðŸ“§ Inform Administrator
            </button>
        </form>
    </div>
</div>

<!-- Modal for adding a new opportunity -->
<div id="opportunityModal" class="modal">
    <div class="modal-content">
        <h2>âž• Add Opportunity</h2>
        <form id="opportunityForm" method="post" action="{{ path('rh_add_opportunity') }}">
            <div class="form-group">
                <label for="opportunityName">Opportunity Name</label>
                <input type="text" id="opportunityName" name="opportunityName" required>
            </div>
            <div class="form-group">
                <label for="companyName">Company Name</label>
                <input type="text" id="companyName" name="companyName" required>
            </div>
            <div class="form-group">
                <label for="contactPerson">Contact Person</label>
                <input type="text" id="contactPerson" name="contactPerson" required>
            </div>
                         <div class="form-group">
                 <label for="opportunityValue">Provisional bail (DT)</label>
                 <input type="number" id="opportunityValue" name="opportunityValue" required min="0">
             </div>
            

            <div class="form-group">
                <label for="closeDate">Deadline</label>
                <input type="date" id="closeDate" name="closeDate" required>
            </div>
            <div class="form-group">
                <label for="description">Description</label>
                <textarea id="description" name="description" rows="3"></textarea>
            </div>
            <div class="form-actions">
                <button type="button" class="btn-secondary" onclick="closeModal()">Cancel</button>
                <button type="submit" class="btn-primary" style="cursor: pointer !important; pointer-events: auto !important;">Save</button>
            </div>
        </form>
    </div>
</div>

<script>
    function openModal() {
        document.getElementById('opportunityModal').style.display = 'block';
    }
    
    function closeModal() {
        document.getElementById('opportunityModal').style.display = 'none';
        document.getElementById('opportunityForm').reset();
    }
    
    // Gestion du clic sur le modal pour le fermer
    document.getElementById('opportunityModal').addEventListener('click', function(e) {
        if (e.target === this) {
            closeModal();
        }
    });
    
    // Gestion de la soumission du formulaire
    document.getElementById('opportunityForm').addEventListener('submit', function(e) {
        e.preventDefault();
        
                 // Validation des champs requis
         const requiredFields = ['opportunityName', 'companyName', 'contactPerson', 'opportunityValue', 'closeDate'];
        let isValid = true;
        
        requiredFields.forEach(fieldName => {
            const field = document.getElementById(fieldName);
            if (!field.value.trim()) {
                field.style.borderColor = '#ff4757';
                isValid = false;
            } else {
                field.style.borderColor = '#e0e0e0';
            }
        });
        
        if (isValid) {
            // RÃ©cupÃ©rer les donnÃ©es du formulaire
            const formData = new FormData(this);
            
            // Envoyer la requÃªte AJAX
            fetch('{{ path('rh_add_opportunity') }}', {
                method: 'POST',
                body: formData
            })
            .then(response => {
                if (response.ok) {
                    return response.json();
                } else {
                    return response.text().then(text => {
                        throw new Error('Server error: ' + text);
                    });
                }
            })
            .then(data => {
                if (data.success) {
                    // Fermer le modal
                    closeModal();
                    
                    // Recharger la page pour afficher la nouvelle opportunitÃ©
                    window.location.reload();
                } else {
                    throw new Error(data.error || 'Unknown error');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Erreur lors de la sauvegarde: ' + error.message);
            });
        } else {
            alert('Please fill in all required fields.');
        }
    });
    
    // RÃ©initialiser les bordures lors de la saisie
    document.querySelectorAll('#opportunityForm input, #opportunityForm select, #opportunityForm textarea').forEach(field => {
        field.addEventListener('input', function() {
            if (this.value.trim()) {
                this.style.borderColor = '#e0e0e0';
            }
        });
    });

    // Fonction pour supprimer une opportunitÃ©
    function deleteOpportunity(opportunityId) {
        if (confirm('Are you sure you want to delete this opportunity?')) {
            fetch(`/rh/delete-opportunity/${opportunityId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                }
            })
            .then(response => {
                if (response.ok) {
                    return response.json();
                } else {
                    throw new Error('Failed to delete opportunity');
                }
            })
            .then(data => {
                if (data.success) {
                    const opportunityCard = document.querySelector(`[data-opportunity-id="${opportunityId}"]`);
                    if (opportunityCard) {
                        opportunityCard.style.opacity = '0';
                        opportunityCard.style.transform = 'translateX(-100%)';
                        opportunityCard.style.transition = 'all 0.3s ease';
                        
                        setTimeout(() => {
                            opportunityCard.remove();
                            const remainingOpportunities = document.querySelectorAll('.opportunity-card');
                            if (remainingOpportunities.length === 0) {
                                const opportunitiesList = document.getElementById('opportunitiesList');
                                opportunitiesList.innerHTML = '<div style="text-align: center; color: #666; font-style: italic; padding: 40px;">No opportunities found.</div>';
                            }
                        }, 300);
                    }
                } else {
                    throw new Error(data.error || 'Failed to delete opportunity');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while deleting the opportunity.');
            });
        }
    }
</script>
{% endblock %} 