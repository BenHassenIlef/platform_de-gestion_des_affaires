{% extends 'base.html.twig' %}
{% block title %}Admin - Manage Opportunities{% endblock %}
{% block stylesheets %}
<style>
    body { 
        background: linear-gradient(135deg, #a8ff78 0%, #78ffd6 100%);
        min-height: 100vh;
        font-family: 'Segoe UI', 'Roboto', Arial, sans-serif;
        color: #333;
        margin: 0;
        padding: 0;
    }
    .container { max-width: 1200px; margin: 60px auto 0 auto; padding: 20px; }
    .main-content { display: flex; flex-direction: column; align-items: center; }
    .opportunities-section {
        background: #fff;
        border-radius: 24px;
        box-shadow: 0 8px 32px rgba(0, 180, 255, 0.10);
        padding: 50px 40px;
        width: 100%;
        margin-bottom: 32px;
        border: 3px solid;
        border-image: linear-gradient(90deg, #00b4ff 0%, #ffe066 100%) 1;
        position: relative;
        overflow: hidden;
    }
    .opportunities-section::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: linear-gradient(90deg, #00b4ff 0%, #ffe066 100%);
    }
    .section-header { display: flex; justify-content: space-between; align-items: center; margin-bottom: 25px; padding-bottom: 15px; border-bottom: 2px solid #f0f0f0; }
    .section-header h2 { 
        font-size: 2.8rem; 
        font-weight: 800; 
        background: linear-gradient(135deg, #00b4ff 0%, #ffe066 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        margin-bottom: 40px;
        text-align: center;
        letter-spacing: 1.5px;
        text-shadow: 0 2px 4px rgba(0, 180, 255, 0.1);
        margin: 0;
    }
    .opportunity-card { 
        background: #fff;
        border-radius: 20px;
        padding: 24px;
        box-shadow: 0 4px 20px rgba(0, 180, 255, 0.08);
        border: 2px solid #f0f8ff;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
        margin-bottom: 20px;
    }
    .opportunity-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: linear-gradient(90deg, #00b4ff 0%, #ffe066 100%);
    }
    .opportunity-card:hover { transform: translateY(-4px); box-shadow: 0 8px 32px rgba(0, 180, 255, 0.15); }
    .opportunity-header { display: flex; justify-content: space-between; align-items: flex-start; margin-bottom: 16px; }
    .opportunity-title { font-size: 1.3rem; font-weight: 800; color: #00b4ff; margin-bottom: 4px; }
    .opportunity-company { font-size: 1rem; color: #666; font-weight: 600; }
    .opportunity-details { display: grid; grid-template-columns: 1fr 1fr; gap: 12px; margin-bottom: 16px; }
    .detail-item { display: flex; flex-direction: column; }
    .detail-label { font-size: 0.9rem; color: #888; font-weight: 600; margin-bottom: 4px; }
    .detail-value { font-size: 1rem; color: #222; font-weight: 700; }
    .value-amount { color: #00b4ff; }
    .opportunity-description { color: #666; font-size: 0.95rem; line-height: 1.5; margin-bottom: 16px; }
    .decision-form { 
        background: #f8f9ff; 
        padding: 16px; 
        border-radius: 12px; 
        border: 2px solid #e0e8ff;
        margin-top: 16px;
    }
    .decision-select {
        width: 100%;
        padding: 12px 16px;
        border: 2px solid #e0e0e0;
        border-radius: 8px;
        font-size: 1rem;
        font-weight: 600;
        background: #fff;
        color: #333;
        transition: all 0.3s ease;
        cursor: pointer;
    }
    .decision-select:focus {
        outline: none;
        border-color: #00b4ff;
        box-shadow: 0 0 0 3px rgba(0, 180, 255, 0.1);
    }
    .decision-select option[value="approved"] { color: #28a745; }
    .decision-select option[value="rejected"] { color: #ff4757; }
    .decision-select option[value="pending"] { color: #ffc107; }
    .decision-select option[value="under_review"] { color: #00b4ff; }
    .btn-update-decision {
        background: linear-gradient(135deg, #00b4ff 0%, #ffe066 100%);
        color: #222;
        border: none;
        padding: 8px 16px;
        border-radius: 20px;
        cursor: pointer;
        font-weight: 700;
        font-size: 0.9rem;
        transition: all 0.3s ease;
        margin-top: 8px;
    }
    .btn-update-decision:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(0, 180, 255, 0.3);
    }
    @media (max-width: 768px) {
        .container { margin: 40px 15px 0 15px; padding: 10px; }
        .opportunities-section { padding: 30px 20px; }
        .section-header h2 { font-size: 2.2rem; margin-bottom: 30px; }
        .opportunity-details { grid-template-columns: 1fr; }
    }
    @media (max-width: 480px) {
        .opportunities-section { padding: 25px 15px; }
        .section-header h2 { font-size: 1.8rem; margin-bottom: 25px; }
    }
</style>
{% endblock %}

{% block body %}
{% include 'navbar.html.twig' %}
<div class="container">
    <div class="main-content">
        <section class="opportunities-section">
            {% for message in app.flashes('success') %}
                <div style="background: linear-gradient(135deg, #4caf50 0%, #8bc34a 100%); color: white; padding: 15px 20px; border-radius: 12px; margin-bottom: 20px; text-align: center; font-weight: 600;">
                    {{ message }}
                </div>
            {% endfor %}
            {% for message in app.flashes('error') %}
                <div style="background: linear-gradient(135deg, #ff4757 0%, #ff3742 100%); color: white; padding: 15px 20px; border-radius: 12px; margin-bottom: 20px; text-align: center; font-weight: 600;">
                    {{ message }}
                </div>
            {% endfor %}
            <div class="section-header">
                <h2>Manage Opportunities</h2>
            </div>
            <div id="opportunitiesList">
                {% for opp in opportunities %}
                    <div class="opportunity-card">
                        <div class="opportunity-header">
                            <div>
                                <div class="opportunity-title">{{ opp.name }}</div>
                                <div class="opportunity-company">{{ opp.company }}</div>
                            </div>
                        </div>
                        <div class="opportunity-details">
                            <div class="detail-item">
                                <span class="detail-label">üë§ Contact:</span>
                                <span class="detail-value">{{ opp.contact }}</span>
                            </div>
                            <div class="detail-item">
                                <span class="detail-label">üí∞ Value:</span>
                                <span class="detail-value value-amount">{{ opp.value }} DT</span>
                            </div>
                            <div class="detail-item">
                                <span class="detail-label">üìÖ Deadline:</span>
                                <span class="detail-value">{{ opp.closeDate ? opp.closeDate|date('Y-m-d') : '' }}</span>
                            </div>
                            <div class="detail-item">
                                <span class="detail-label">üìß Admin Status:</span>
                                <span class="detail-value">
                                    {% if opp.notifiedToAdmin %}
                                        <span style="color: #28a745; font-weight: 600;">‚úÖ Notified</span>
                                    {% else %}
                                        <span style="color: #ffc107; font-weight: 600;">‚è≥ Pending</span>
                                    {% endif %}
                                </span>
                            </div>
                            
                            {# Suppression de la section PDFs upload√©s par RH #}
                        </div>
                        {% if opp.description %}
                            <div class="opportunity-description">{{ opp.description }}</div>
                        {% endif %}
                        <div class="decision-form">
                            <label for="decision_{{ opp.id }}" style="font-weight: 600; color: #00b4ff; margin-bottom: 8px; display: block;">üéØ Decision:</label>
                            <select id="decision_{{ opp.id }}" class="decision-select" data-opportunity-id="{{ opp.id }}">
                                <option value="" {% if not opp.status or opp.status == '' %}selected{% endif %}>Select...</option>
                                <option value="approved" {% if opp.status == 'approved' %}selected{% endif %}>‚úÖ Approved</option>
                                <option value="rejected" {% if opp.status == 'rejected' %}selected{% endif %}>‚ùå Rejected</option>
                                <option value="pending" {% if opp.status == 'pending' %}selected{% endif %}>‚è≥ Pending</option>
                                <option value="under_review" {% if opp.status == 'under_review' %}selected{% endif %}>üîç Under Review</option>
                            </select>
                        </div>
                        

                    </div>
                {% else %}
                    <div style="text-align: center; color: #666; font-size: 1.1rem;">No opportunities found.</div>
                {% endfor %}
            </div>
        </section>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const decisionSelects = document.querySelectorAll('.decision-select');
        
        decisionSelects.forEach(select => {
            select.addEventListener('change', function() {
                const opportunityId = this.getAttribute('data-opportunity-id');
                const decision = this.value;
                
                if (decision) {
                    updateOpportunityDecision(opportunityId, decision, this);
                }
            });
        });
        
        // Load RH uploaded PDFs for all opportunities
        const allOpportunities = document.querySelectorAll('.opportunity-card');
        allOpportunities.forEach(card => {
            const opportunityId = card.querySelector('.decision-select').getAttribute('data-opportunity-id');
            if (opportunityId) {
                loadRhPdfFiles(opportunityId);
            }
        });
    });
    
    function updateOpportunityDecision(opportunityId, decision, selectElement) {
        fetch('{{ path('admin_update_opportunity_decision_ajax') }}', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                opportunityId: opportunityId,
                decision: decision
            })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                showNotification(`Decision updated: ${selectElement.options[selectElement.selectedIndex].text}`, 'success');
                

                
                // Optionally disable the select after decision
                selectElement.disabled = true;
                selectElement.style.opacity = '0.7';
            } else {
                showNotification('Error updating decision: ' + data.message, 'error');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            showNotification('Error updating decision', 'error');
        });
    }
    
    function loadRhPdfFiles(opportunityId) {
        fetch(`/admin/get-rh-pdf-files/${opportunityId}`)
        .then(response => response.json())
        .then(data => {
            if (data.success && data.files.length > 0) {
                const pdfList = document.querySelector(`.rh-uploaded-pdfs[data-opportunity-id="${opportunityId}"]`);
                if (pdfList) {
                    pdfList.innerHTML = data.files.map(file => `
                        <div class="rh-pdf-item" style="display: flex; justify-content: space-between; align-items: center; padding: 8px; background: white; border-radius: 6px; margin-bottom: 6px; border: 1px solid #ddd;">
                            <div style="flex: 1;">
                                <div style="font-weight: 600; color: #333; font-size: 0.9rem;">${file.originalFilename}</div>
                                <div style="font-size: 0.8rem; color: #666;">
                                    Uploaded by: ${file.uploadedBy} | 
                                    Size: ${(file.fileSize / 1024).toFixed(1)} KB | 
                                    Date: ${file.uploadedAt}
                                </div>
                            </div>
                            <div style="display: flex; gap: 4px;">
                                <a href="/admin/download-rh-pdf/${file.id}" class="btn-download-rh-pdf" style="background: #2196f3; color: white; border: none; padding: 4px 8px; border-radius: 4px; cursor: pointer; font-size: 0.8rem; text-decoration: none;">üì•</a>
                            </div>
                        </div>
                    `).join('');
                }
            } else {
                const pdfList = document.querySelector(`.rh-uploaded-pdfs[data-opportunity-id="${opportunityId}"]`);
                if (pdfList) {
                    pdfList.innerHTML = '<div style="color: #666; font-size: 0.9rem; text-align: center; padding: 8px;">No PDFs uploaded by RH yet</div>';
                }
            }
        })
        .catch(error => {
            console.error('Error loading RH PDF files:', error);
            const pdfList = document.querySelector(`.rh-uploaded-pdfs[data-opportunity-id="${opportunityId}"]`);
            if (pdfList) {
                pdfList.innerHTML = '<div style="color: #dc3545; font-size: 0.9rem; text-align: center; padding: 8px;">Error loading PDFs</div>';
            }
        });
    }
    
    function showNotification(message, type = 'info') {
        const notification = document.createElement('div');
        notification.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 12px 20px;
            border-radius: 8px;
            color: white;
            font-weight: 600;
            z-index: 1000;
            animation: slideIn 0.3s ease;
        `;
        
        if (type === 'success') {
            notification.style.background = 'linear-gradient(90deg, #28a745, #20c997)';
        } else if (type === 'error') {
            notification.style.background = 'linear-gradient(90deg, #dc3545, #e74c3c)';
        } else {
            notification.style.background = 'linear-gradient(90deg, #17a2b8, #38b6ff)';
        }
        
        notification.textContent = message;
        document.body.appendChild(notification);
        
        setTimeout(() => {
            notification.style.animation = 'slideOut 0.3s ease';
            setTimeout(() => notification.remove(), 300);
        }, 3000);
    }
    
    // CSS for animations
    const style = document.createElement('style');
    style.textContent = `
        @keyframes slideIn {
            from { transform: translateX(100%); opacity: 0; }
            to { transform: translateX(0); opacity: 1; }
        }
        @keyframes slideOut {
            from { transform: translateX(0); opacity: 1; }
            to { transform: translateX(100%); opacity: 0; }
        }
    `;
    document.head.appendChild(style);
</script>
{% endblock %} 